package com.we.dubbo.impl;

import org.springframework.beans.factory.annotation.Autowired;

import com.mongodb.DBObject;
import com.we.common.Constant.ReCode;
import com.we.common.mongo.DboUtil;
import com.we.core.web.ReMsg;
import com.we.dubbo.RpcChatBoxService;
import com.we.service.MessageService;
import com.we.service.UserService;
import com.we.socket.model.JsonMsg;

public class RpcChatBoxServiceImpl implements RpcChatBoxService {

	@Autowired
	UserService userService;

	@Autowired
	MessageService messageService;

	@Override
	public ReMsg chat(JsonMsg msg) {
		Long frid = msg.getDataVal("frid", Long.class);
		if (msg.getMethod() == JsonMsg.ALL) {
			DBObject frUser = userService.findById(frid);
			if (frUser != null) {
				// TODO valid sendTime
				msg.append("nickname", DboUtil.getString(frUser, "nickname"));
				msg.append("level", DboUtil.getString(frUser, "nickname"));
				msg.append("avatar", DboUtil.getString(frUser, "avatar"));
				Long toid = msg.getDataVal("toid", Long.class);
				if (toid != null) {
					DBObject toUser = userService.findById(toid);
					msg.append("toNickname", DboUtil.getString(toUser, "nickname"));
				}
				messageService.sendAll(msg);
			}
		} else {
			DBObject frUser = userService.findById(frid);
			if (frUser != null) {
				msg.append("nickname", DboUtil.getString(frUser, "nickname"));
				msg.append("level", DboUtil.getString(frUser, "nickname"));
				msg.append("avatar", DboUtil.getString(frUser, "avatar"));
				messageService.sendP2P(msg);
			}
		}
		return new ReMsg(ReCode.OK);
	}

	@Override
	public ReMsg Login(String token, Long uid) {
		long curUid = userService.getUid(token);
		if (curUid == 0 || curUid != uid) {
			return new ReMsg(ReCode.FAIL);
		}
		return new ReMsg(ReCode.OK, userService.findById(uid));
	}

}
