<!doctype html>
<html>

	<head>
		<meta charset="UTF-8">
		<title>이벤트</title>
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		<link href="css/mui.min.css" rel="stylesheet" />
		<link rel="stylesheet" type="text/css" href="css/style.css"/>
		<style type="text/css">
			.activity-list img{
				height: 100px;
			}
			.mui-content{
				position: absolute;
				width: 100%;
			}
		</style>
		
	</head>

	<body>
	
		<div id="pullrefresh" class="mui-content mui-scroll-wrapper">
		   <div class="mui-scroll activity-list">
		   		<ul class="mui-table-view mui-table-view-chevron">
		   			<li v-for="item in list" >
		   				<a href="#" @tap="open_detail(item)"><span ><img :src="item.pic"></span></a>
		   			</li>
		   		</ul>
		   </div>
		</div>
	 <script src="js/mui.min.js"></script>
	 <script src="js/app.js" type="text/javascript" charset="utf-8"></script>
	 <script src="js/vue.min.js" type="text/javascript"></script>
	 <script type="text/javascript">
	 	mui.init({
	 	 	pullRefresh: {
					container: '#pullrefresh',
					down: {
						height:50,//可选,默认50.触发下拉刷新拖动距离,
					      auto: false,//可选,默认false.首次加载自动下拉刷新一次
					      contentdown : "",//可选，在下拉可刷新状态时，下拉刷新控件上显示的标题内容
					      contentover : "",//可选，在释放可刷新状态时，下拉刷新控件上显示的标题内容
					      contentrefresh : "",//可选，正在刷新状态时，下拉刷新控件上显示的标题内容
						  callback: function() {
						 	 initDown();
							mui('#pullrefresh').pullRefresh().endPulldownToRefresh();
						 }
					},
					up:{
						contentnomore:'no more..',
						contentrefresh: '',
						contentover:'',
						callback: function(){
							mui('#pullrefresh').pullRefresh().endPullupToRefresh();
						}
						
					}
				}
	 	 })
	 	
	 	var webview_detail=null;
	 	mui.plusReady(function() {
	 		webview_detail = mui.preload({
				url: 'activityDetail.html',
				id: 'activityDetail',
				styles: {
					"render": "always",
					"popGesture": "hide",
					"bounce": "vertical",
					"bounceBackground": "#efeff4",
				}
			});
	 	})
	 	
	 	function open_detail(item){
	 		var lkFlag =item.lkFlag;
	 	 	var content =item.content;
	 	 	var title =item.title;
			if('1'==lkFlag){
				mui.fire(webview_detail, 'get_detail', {
					content:content,
					title:title
				});
				setTimeout(function () {
					webview_detail.show("slide-in-right", 300);
				},0);
			}else if(2==lkFlag){
				mui.openWindow({
					url: ''+item.actLink,
					id: '_open'+item.actLink,
					show: {
						aniShow: 'pop-in'
					},
					styles: {
						popGesture: 'close'
					},
					waiting: {
						autoShow: true
					},
					extras: {
					},
				});
			}
		 	return;	
 		}
	 	 
	 	
	 	 function initDown(){
	 	 	if(window.plus && plus.networkinfo.getCurrentType() === plus.networkinfo.CONNECTION_NONE) {
				plus.nativeUI.toast('network error..', {
					verticalAlign: 'top'
				});
				return;
			}
			
			initActivityData();
	 	 }
	 	 
	 	 window.addEventListener("facti",function(){
	 	 	if(watchInitEn()){
	 	 		initDown();
	 	 	}
	 	 })
	 	 
	 	 var activityData =new Vue({
	 	 	 el:'.mui-content',
	 	 	 data:{
	 	 	 	list:[]
	 	 	 }
	 	 })
	 	 
	 	function watchInitEn(){
			if((activityData.list)&&(activityData.list).length>0){
				return false;
			}
			return true;
		}
	 	 
	 	 function initActivityData(){
 			mui.getJSON(app.serverApi(app.apiConstant.queryNoticeActivitys),{},function(res){
 				if(0!=res.code){
					 plus.nativeUI.toast(res.msg);
				}else{
					var alist =[];
					var activitys =res.data.activitys;
					var imgRoot =res.data.imgDomain;
					if(activitys&&null!=activitys){
						for(var i=0;i<activitys.length;i++){
							var json ={};
							json.content ="...";
							json.lkFlag=activitys[i].lkFlag+'';
							json.title="--";
							if(activitys[i].content){
								json.content =activitys[i].content;
							};
							json.pic ="";
							if(activitys[i].pic){
								json.pic =imgRoot+activitys[i].pic;
							};
							json.actLink ="";
							if('2'==json.lkFlag&&activitys[i].actLink){
								json.actLink =activitys[i].actLink+"";
							}
							if(activitys[i].title){
								json.title =activitys[i].title;
							}
							alist.push(json);
						}
						activityData.list =alist;
						
						
					}
					
				}
				
			})
	 	 }
	 	 if (mui.os.plus) {
			mui.plusReady(function() {
				setTimeout(function() {
					mui('#pullrefresh').pullRefresh().pullupLoading();
				}, 10);

			});
		} else {
			mui.ready(function() {
				mui('#pullrefresh').pullRefresh().pullupLoading();
			});
		}
	 </script>
	</body>
</html>