<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:redis="http://www.springframework.org/schema/redis"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis-1.0.xsd"
	default-lazy-init="true">


	<bean id="mainJedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"
		p:maxTotal="${redis.pool.maxActive}" p:maxIdle="${redis.pool.maxIdle}"
		p:maxWaitMillis="${redis.pool.maxWait}" p:testOnBorrow="${redis.pool.testOnBorrow}"
		p:testOnReturn="${redis.pool.testOnReturn}" />
	<bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:hostName="${redis.host}" p:port="${redis.port}" p:poolConfig-ref="mainJedisPoolConfig" />
	<bean id="mainRedis" class="org.springframework.data.redis.core.StringRedisTemplate"
		p:connectionFactory-ref="redisConnectionFactory" />

	

	<!-- pub/sub -->
	<bean id="serialization"
		class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />

	<!--接收聊天消息监听器 -->
	<bean id="redisRecvListener" class="com.we.socket.store.RedisRecvListener" />
	<bean id="redisRecvServiceListenerAdapter"
		class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="redisRecvListener" />
		<property name="serializer" ref="serialization" />
	</bean>

	<!-- 配置redis订阅 -->
	<bean id="redisContainer"
		class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
		<property name="connectionFactory" ref="redisConnectionFactory" />
		<property name="messageListeners">
			<map>
				<entry key-ref="redisRecvServiceListenerAdapter">
					<list>
						<bean class="org.springframework.data.redis.listener.ChannelTopic">
							<constructor-arg value="${all_channel_topic}" />
						</bean>
						
						<bean class="org.springframework.data.redis.listener.ChannelTopic">
							<constructor-arg value="${sid_channel}" />
						</bean>
						
						<!-- room渠道 -->
						<bean class="org.springframework.data.redis.listener.PatternTopic">
							<constructor-arg value="${room_channel}" />
						</bean>
						<!-- 用户渠道 -->
						<bean class="org.springframework.data.redis.listener.PatternTopic">
							<constructor-arg value="${user_channel}" />
						</bean>
						<!-- room用户渠道 -->
                        <bean class="org.springframework.data.redis.listener.PatternTopic">
                            <constructor-arg value="${room_user_channel}" />
                        </bean>
					</list>
				</entry>
			</map>
		</property>
	</bean>

</beans>