<!doctype html>
<html>

	<head>
		<meta charset="UTF-8">
		<title></title>
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		 <link href="css/mui.min.css" rel="stylesheet"/>
   		 <link rel="stylesheet" type="text/css" href="css/style.css"/> 
		
	</head>

	<body>
		<!--下拉刷新容器-->
		<div class="mui-content newslist">
			<!--数据列表-->
			<div class="mui-slider">
			    <div class="mui-slider-indicator mui-segmented-control mui-segmented-control-inverted  mui-flex">
			        <a class="mui-control-item mui-active" href="#news1" data-id="1">뉴스</a>
			        <a class="mui-control-item" href="#news2" data-id="2">공지</a>
			    </div>
			    <div class="mui-slider-group">
			    		<div id="news1" class="mui-slider-item mui-control-content  mui-active">
						<ul class="mui-table-view mui-table-view-chevron">
							<li class="mui-table-view-cell" v-for="item in news">
								<div class="meta-info">
									<div class="time">{{item.publishTime}}</div>
								</div>
								<div class="newscon" @tap="open_detail(1,item)">
									<div class="mui-media-body newstitle">
										<div class="mui-ellipsis-2">&nbsp;{{item.title}}</div>
									</div>
									<div class="mui-media-large">
										<div class="mui-ellipsis-2">&nbsp;{{item.title}}</div>
									</div>
									<div class="imgboy"> 
										<img class="mui-media-object mui-pull-left" :src="(item.cover)">
									</div>
									<div><a class="linkbtn" >전체보기</a></div>
									<a class="share-btn-news">공유</a>		
								</div>
							</li>
						</ul>
					</div>
					<div id="news2" class="mui-slider-item mui-control-content">
						<ul class="mui-table-view mui-table-view-chevron">
							<li class="mui-table-view-cell" v-for="item in notices" @tap="open_detail(2,item)">
								<div class="mui-media-body">
									<div class="mui-ellipsis-2 news2title">&nbsp;{{item.title}}
									<div class="time">{{item.publishTime}}</div></div>
									
									<div class="noticeimg">
										<img class="mui-media-object" :src="(item.cover)">
									</div>
								</div>
								
							</li>
						</ul>
					</div>
				</div>
			</div>
		
		</div>
		<script src="js/mui.min.js"></script>
		<script src="js/app.js" type="text/javascript" charset="utf-8"></script>
		<script src="js/vue.min.js" type="text/javascript" charset="utf-8"></script>
		<script type="text/javascript">
			var lastId = ''; //最新新闻的id
			var webview_detail = null; //详情页webview
			var titleNView = { //详情页原生导航配置
				backgroundColor: '#f7f7f7', //导航栏背景色
				titleText: '', //导航栏标题
				titleColor: '#000000', //文字颜色
				type: 'transparent', //透明渐变样式
				autoBackButton: true, //自动绘制返回箭头
				splitLine: { //底部分割线
					color: '#cccccc'
				}
			}
			//mui初始化，配置下拉刷新
			mui.init({
				pullRefresh: {
					container: '#news1',
					down: {
						style: 'circle',
						offset: '0px',
						auto:true,
						callback: function() {
							if(window.plus && plus.networkinfo.getCurrentType() === plus.networkinfo.CONNECTION_NONE) {
								plus.nativeUI.toast('network error..', {
									verticalAlign: 'top'
								});
								return;
							}
							newsAndnoticeData.news =[];
							newsAndnoticeData.newsPageParam.page =0;
							setTimeout(function() {
								queryData(1);
							}, 300);
							setTimeout(function() {
							  newsAndnoticeData.notices=[];
							  queryNoticeData();
							  mui('#news1').pullRefresh().endPulldown();
							}, 1000);
							
						}
					},
					up:{
						style: 'circle',
						auto:false,
						contentinit:'',
						contentdown:'loading more data..',
						contentnomore:'no more data..',
						callback: function(){
							queryData(2);
						},
					}
				}
				
			});
		
		var newsAndnoticeData = new Vue({
				el: '.mui-content',
				data: {
					newsPageParam:{
						page:0,
						size:10,
					},
					news: [], 
					banners:[],
					notices: [],
					imgDomain:'',
				}
		});	
		
		function queryData(val){
			var cur =parseInt(newsAndnoticeData.newsPageParam.page);
			var count =parseInt(newsAndnoticeData.news.length/newsAndnoticeData.newsPageParam.size)+1;
			newsAndnoticeData.newsPageParam.page=count;
			var reqParam ={
				page:cur,
				size:newsAndnoticeData.newsPageParam.size
			}
			var list=[];
			 mui.getJSON(app.serverApi(app.apiConstant.getNewsInfo),reqParam,function(res){
			 	app.respondingTo(res.code,function(code){
			 		if(0!=code){
			 			plus.nativeUI.toast(res.msg);
			 		}else{
			 			var news =res.data.news;
			 			var banners =res.data.banners;
			 			var imgDomain = res.data.imgDomain;
			 			newsAndnoticeData.total=news.total;
			 			if(news&&news.list){
			 				var newArr=news.list;
			 				for(var i=0; i<newArr.length;i++){
				 				var json={};
				 				json.cover = "images/logo-login.png";
				 				var x = newArr[i];
				 				json.gid = x._id;
				 				if(x.cover&&''!=x.cover){
				 					json.cover=imgDomain+x.cover;
				 				}
				 				json.title =x.title;
				 				if(x.title&&x.title!=''&&x.title.length>18){
				 					json.title = (x.title).substr(0,18)+"..";
				 				}
				 				json.publishTime = app.longFymdhms(x.publishTime);
				 				json.content = '';
				 				if(x.content&&x.content!=''){
				 				}
				 				json.username ='--';
				 				if(x.username&&null!=x.username){
				 					json.username = x.username;
				 				}
			 					list.push(json);
				 			}
			 				newsAndnoticeData.news=newsAndnoticeData.news.concat(list);
			 			}
			 			if(banners&&banners!=null){
			 				var bannersList=[];
			 				newsAndnoticeData.banners=newsAndnoticeData.banners.concat(bannersList);
			 			}
			 			newsAndnoticeData.imgDomain =imgDomain;
			 			
			 		}
			 		if(val==2){			 			
			 			mui('#news1').pullRefresh().endPullup(newsAndnoticeData.news.length>=newsAndnoticeData.total);
			 		}
			 		mui("#news1").pullRefresh().endPulldown();
			 		closePulldown();
			 		
			 	})
			 })
		}
		
		function queryNoticeData(){
			var reqParam ={
				page:1,
				size:10,
			}
			var list=[];
			 mui.getJSON(app.serverApi(app.apiConstant.getNoticesInfo),reqParam,function(res){
			 	app.respondingTo(res.code,function(code){
			 		if(0!=code){
			 			plus.nativeUI.toast(res.msg);
			 		}else{
			 			var notices =res.data;
			 			if(notices&&notices!=null){
			 				for(var i=0;i<notices.length;i++){
			 					var json={};
			 					var x =notices[i];
			 					json.gid = x._id;
			 					json.title=x.title;
			 					json.publishTime =app.longFymdhms(x.createTime);
			 					list.push(json);
			 				}
			 				newsAndnoticeData.notices=newsAndnoticeData.notices.concat(list);
			 			}
			 			
			 		}
			 		//
			 	})
			 })
		}
		
		function closePulldown(id){
			mui("#news1").pullRefresh().endPulldown();
 			mui("#news1").pullRefresh().refresh(true);
		}
		mui.plusReady(function() {
//				webview_detail = mui.preload({
//					url: 'detail.html',
//					id: 'detailbak',
//					styles: {
//						"render": "always",
//						"popGesture": "hide",
//						"bounce": "vertical",
//						"bounceBackground": "#efeff4",
//					}
//				});


			});
			
			/**
			 * 打开新闻详情
			 * 
			 * @param {Object} item 当前点击的新闻对象
			 */
			function open_detail(i,item) {
				var gid =item.gid;
				if(!gid) {
					return;
				}
				
				setTimeout(function () {
					if(i&&i!=""){
					  initShareContent(i,gid);
					}
				},0);
				
			}
			
			function initShareContent(i,gid){
				mui.openWindow({
					url: "detail.html",
					id: 'news_detail',
					show: {
						aniShow: 'pop-in'
					},
					styles: {
						popGesture: 'hide'
					},
					waiting: {
						autoShow: true
					},
					extras:{
						i:i,
						gid:gid,
				    },
				});
				
				
				
			}
			
			/**
			 * 1、将服务端返回数据，转换成前端需要的格式
			 * 2、若服务端返回格式和前端所需格式相同，则不需要改功能
			 * 
			 * @param {Array} items 
			 */
			function convert(items) {
				var newItems = [];
				items.forEach(function(item) {
					newItems.push({
						guid: item.post_id,
						title: item.title,
						author: item.author_name,
						cover: item.cover,
						time:dateUtils.format(item.published_at)
					});
				});
				return newItems;
			}

			/**
			 * 格式化时间的辅助类，将一个时间转换成x小时前、y天前等
			 */
			var dateUtils = {
				UNITS: {
					'年': 31557600000,
					'月': 2629800000,
					'天': 86400000,
					'小时': 3600000,
					'分钟': 60000,
					'秒': 1000
				},
				humanize: function(milliseconds) {
					var humanize = '';
					mui.each(this.UNITS, function(unit, value) {
						if(milliseconds >= value) {
							humanize = Math.floor(milliseconds / value) + unit + '前';
							return false;
						}
						return true;
					});
					return humanize || '刚刚';
				},
				format: function(dateStr) {
					var date = this.parse(dateStr)
					var diff = Date.now() - date.getTime();
					if(diff < this.UNITS['天']) {
						return this.humanize(diff);
					}
					
					var _format = function(number) {
						return(number < 10 ? ('0' + number) : number);
					};
					return date.getFullYear() + '/' + _format(date.getMonth() + 1) + '/' + _format(date.getDay()) + '-' + _format(date.getHours()) + ':' + _format(date.getMinutes());
				},
				parse:function (str) {//将"yyyy-mm-dd HH:MM:ss"格式的字符串，转化为一个Date对象
					var a = str.split(/[^0-9]/);
					return new Date (a[0],a[1]-1,a[2],a[3],a[4],a[5] );
				}
			};
		</script>
	</body>

</html>