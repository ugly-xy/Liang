<!doctype html>
<html>

	<head>
		<meta charset="UTF-8">
		<title></title>
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		<link href="css/mui.min.css" rel="stylesheet" />
		<link rel="stylesheet" type="text/css" href="css/style.css" />
		<style type="text/css">
			.uploadcon {
				overflow: hidden;
				padding-top: 30px;
				margin-bottom: 30px;
			}
			
			.uploadcon .img-view {
				float: left;
				margin-right: 17px;
				margin-bottom: 20px;
				text-align: center;
				overflow: hidden;
				width: 100px;
				height: 100px;
				position: relative;
			}
			
			.uploadcon .img-view img {
				position: absolute;
				top: 50%;
				left: 50%;
				-webkit-transform: translate(-50%, -50%);
				transform: translate(-50%, -50%);
				height: 100%;
				width: auto;
			}
			
			.uploadcon .img-view:nth-child(3n) {
				margin-right: 0;
			}
			
			.upaddbtn {
				text-align: center;
				width: 100%;
				height: 100%;
				overflow: hidden;
				display: inline-block;
				background: url(images/icon-add-lg.png) no-repeat center center #ECEDEF;
			}
			
			.uploadbtn {
				position: fixed;
				bottom: 30px;
				left: 15%;
				width: 70%;
				color: #fff;
				display: block;
				margin: 0 auto;
				text-align: center;
				height: 46px;
				line-height: 46px;
				border-radius: 23px;
			}
		</style>
	</head>

	<body>
		<header class="mui-bar mui-bar-nav">
			<a class="mui-action-back mui-icon mui-icon-left-nav mui-pull-left"></a>
			<h1 class="mui-title">이미지 업로드</h1>
		</header>
		<div class="mui-content">
			<div class="uploadcon">
				<div class="img-view" v-for="item in photos"><img :src="imgDomain+(item)" height="120" /></div>
				<div class="img-view" v-if="status!=3">
					<a href="" id="upaddbtn" class="upaddbtn"></a>
				</div>
			</div>
			<a v-if="status!=3" id="upButton" class="uploadbtn color-to-color" >제출</a>
		</div>
		<a v-if="status==3" id="grey" disabled="disabled" class="uploadbtn color-to-color" style="background: grey;">심사중</a>
		<script src="js/mui.min.js"></script>
		<script src="js/app.js" type="text/javascript" charset="utf-8"></script>
		<script src="js/vue.min.js" type="text/javascript"></script>
		<script type="text/javascript">
			mui.init({});

			var activityData = new Vue({
				el: '.mui-content',
				data: {
					id: '',
					imgDomain:'',
					status: "-1",
					photos: []
				}
			})

			mui.plusReady(function() {
				activityData.id=plus.webview.currentWebview().uid;
				var upaddbtn = document.getElementById("upaddbtn");
				var upButton = document.getElementById("upButton");
				mui(".uploadcon").on('tap',".upaddbtn",function() {
					uploadIMG();
				})

				upButton.addEventListener('tap', function() {
					uploadTaskData();
				})
				
				initUploadInfo();
				function initUploadInfo() {
					var id=""+activityData.id;
					if(id && null != id) {
						mui.getJSON(app.serverApi(app.apiConstant.uploadTaskInfo), {
							id: id
						}, function(res) {
							if(0 != res.code) {
								plus.nativeUI.toast(res.msg);
							} else {
								var imgDomain = res.data.imgDomain;
								activityData.imgDomain=imgDomain;
								var data = res.data.obj;
								if(data && null != data) {
									activityData.status = data.status+"";
									var pics = data.pics;
									if(pics && null != pics) {
										for(var i = 0; i < pics.length; i++) {
											var pic = pics[i];
											if(imgDomain && null != imgDomain) {
												pic =  ""+ pic;
											}
											activityData.photos.push(pic);
										}
									}

								}

							}
						})
					} else {
						mui.back();
					}

				}

				function uploadTaskData() {
					var id = activityData.id;
					var status =activityData.status;
					var photos = activityData.photos;
					if("3"!=status&&id && '' != id && photos && photos != '' && photos.length > 0) {
						mui.post(app.serverApi(app.apiConstant.uploadTaskInfo), {
							photos: photos.join(","),
							id: id
						}, function(res) {
							if(0 != res.code) {
								plus.nativeUI.toast(res.msg);
							} else {
								activityData.status="3";
								mui.alert("SUCCESS");
							}
						})
					} else {
						mui.alert("미션 이미지를 제출해주세요");
						return;
					}
				}

				function uploadIMG() {
					if(mui.os.plus) {
						var a = [{
							title: '촬영'
						}, {
							title: '카메라 롤'
						}];
						plus.nativeUI.actionSheet({
							title: '이미지 업로드',
							cancel: '취소',
							buttons: a
						}, function(b) {
							switch(b.index) {
								case 0:
									break;
								case 1:
									//拍照
									getImages();
									break;
								case 2:
									//打开相册
									galleryImages();
									break;
								default:
									break;
							}
						}, false);
					}
				}

				//拍照
				function getImages() {
					app.getMobileCameraImage(uploadHeadImg)
				}

				//从本地相册选择
				function galleryImages() {
					app.getGalleryImage(uploadHeadImg);
				};

				//上传图片
				function uploadHeadImg(imgPath) {
					if(imgPath) {
						var server = app.serverApi(app.apiConstant.uploadImg);
						var wt = plus.nativeUI.showWaiting();
						var task = plus.uploader.createUpload(server, {
								method: "POST"
							},
							function(t, status) { //上传完成
								if(status == 200) {
									wt.close();
									var res = JSON.parse(t.responseText);
									app.respondingTo(res.code, function(code) {
										if(0 == code) {
											var img = res.data + '';
											activityData.photos.push(img);
											plus.nativeUI.toast("업로드 성공..");
										} else {
											mui.alert("upload Fail..");
										}
									})
								} else {
									wt.close();
									mui.alert("upload Fail..");
								}
							}
						);
						task.addFile(imgPath, {
							key: "file"
						});
						task.start();
					}
				}

				//压缩图片转成base64
				function getBase64Image(img) {
					var canvas = document.createElement("canvas");
					var width = img.width;
					var height = img.height;
					if(width > height) {
						if(width > 100) {
							height = Math.round(height *= 100 / width);
							width = 100;
						}
					} else {
						if(height > 100) {
							width = Math.round(width *= 100 / height);
						}
						height = 100;
					}

					canvas.width = width;
					canvas.height = height;
					var ctx = canvas.getContext('2d');
					ctx.drawImage(img, 0, 0, width, height);

					var dataUrl = canvas.toDataURL('image/png', 0.8);
					return dataUrl.replace('data:image/png:base64,', '');
				}
			})
		</script>
	</body>

</html>